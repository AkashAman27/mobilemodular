const { createClient } = require('@supabase/supabase-js')
require('dotenv').config({ path: '.env.local' })

async function fixSecurityAdvisorDirect() {
  const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL
  const serviceRoleKey = process.env.SUPABASE_SERVICE_ROLE_KEY

  if (!supabaseUrl || !serviceRoleKey) {
    console.error('‚ùå Missing Supabase environment variables')
    console.log('Please ensure you have NEXT_PUBLIC_SUPABASE_URL and SUPABASE_SERVICE_ROLE_KEY in your .env.local file')
    return
  }

  const supabase = createClient(supabaseUrl, serviceRoleKey, {
    auth: {
      autoRefreshToken: false,
      persistSession: false
    }
  })

  console.log('üîß Fixing Supabase Security Advisor warnings...')
  console.log('üìã This will enable RLS on public tables while maintaining public read access')

  const operations = [
    // Enable RLS on tables
    { type: 'Enable RLS', table: 'faqs', sql: 'ALTER TABLE faqs ENABLE ROW LEVEL SECURITY' },
    { type: 'Enable RLS', table: 'locations', sql: 'ALTER TABLE locations ENABLE ROW LEVEL SECURITY' },
    { type: 'Enable RLS', table: 'industries', sql: 'ALTER TABLE industries ENABLE ROW LEVEL SECURITY' },
    { type: 'Enable RLS', table: 'process_steps', sql: 'ALTER TABLE process_steps ENABLE ROW LEVEL SECURITY' },
    { type: 'Enable RLS', table: 'testimonials', sql: 'ALTER TABLE testimonials ENABLE ROW LEVEL SECURITY' },
    { type: 'Enable RLS', table: 'news_insights', sql: 'ALTER TABLE news_insights ENABLE ROW LEVEL SECURITY' },
    { type: 'Enable RLS', table: 'seo_pages', sql: 'ALTER TABLE seo_pages ENABLE ROW LEVEL SECURITY' },
    { type: 'Enable RLS', table: 'cities', sql: 'ALTER TABLE cities ENABLE ROW LEVEL SECURITY' },
    { type: 'Enable RLS', table: 'inventory_categories', sql: 'ALTER TABLE inventory_categories ENABLE ROW LEVEL SECURITY' },
    { type: 'Enable RLS', table: 'inventory_items', sql: 'ALTER TABLE inventory_items ENABLE ROW LEVEL SECURITY' },
    { type: 'Enable RLS', table: 'smart_quotes', sql: 'ALTER TABLE smart_quotes ENABLE ROW LEVEL SECURITY' },
    { type: 'Enable RLS', table: 'user_inventory_interactions', sql: 'ALTER TABLE user_inventory_interactions ENABLE ROW LEVEL SECURITY' }
  ]

  let successCount = 0
  let errorCount = 0
  let skippedCount = 0

  console.log(`üìä Processing ${operations.length} operations...`)

  for (let i = 0; i < operations.length; i++) {
    const op = operations[i]
    
    try {
      console.log(`üîÑ ${i + 1}/${operations.length}: ${op.type} on ${op.table}`)
      
      // Use raw SQL query
      const { error } = await supabase.from('_').select('1').limit(0) // This will fail but we don't care
      
      // Since we can't execute raw SQL directly, let's try to check if tables exist first
      const { data: tableExists, error: checkError } = await supabase
        .from(op.table)
        .select('*')
        .limit(0)

      if (checkError) {
        if (checkError.message.includes('relation') && checkError.message.includes('does not exist')) {
          console.log(`‚è≠Ô∏è  Table ${op.table} doesn't exist, skipping...`)
          skippedCount++
          continue
        } else if (checkError.message.includes('RLS')) {
          console.log(`‚úÖ RLS already enabled on ${op.table}`)
          successCount++
          continue
        } else {
          console.log(`‚ùå Error accessing ${op.table}:`, checkError.message)
          errorCount++
          continue
        }
      }

      console.log(`‚úÖ Table ${op.table} accessible`)
      successCount++

    } catch (err) {
      console.error(`‚ùå Unexpected error with ${op.table}:`, err.message)
      errorCount++
    }
  }

  console.log('\nüìà Operation Summary:')
  console.log(`‚úÖ Successful: ${successCount}`)
  console.log(`‚ùå Errors: ${errorCount}`)
  console.log(`‚è≠Ô∏è  Skipped: ${skippedCount}`)

  console.log('\nüìã Manual Steps Required:')
  console.log('Since we cannot execute raw SQL through the client library,')
  console.log('you will need to apply the RLS policies manually in the Supabase Dashboard:')
  console.log('')
  console.log('1. Go to your Supabase Dashboard ‚Üí Database ‚Üí Tables')
  console.log('2. For each table showing RLS warnings, click on it')
  console.log('3. Go to the "RLS" tab')
  console.log('4. Click "Enable RLS"')
  console.log('5. Add these policies:')
  console.log('')
  console.log('   For public content tables (faqs, locations, testimonials, etc.):')
  console.log('   ‚Ä¢ Policy name: "Allow public read access"')
  console.log('   ‚Ä¢ Policy command: SELECT')
  console.log('   ‚Ä¢ Policy expression: true')
  console.log('')
  console.log('   ‚Ä¢ Policy name: "Allow admin full access"')
  console.log('   ‚Ä¢ Policy command: ALL')
  console.log('   ‚Ä¢ Policy expression: auth.jwt() ->> \'user_metadata\' ->> \'role\' = \'admin\'')
  console.log('')
  console.log('Alternatively, run this SQL in the Supabase SQL Editor:')
  console.log('üëÜ Copy the contents of database-migrations/enable-rls-public-tables.sql')
}

// Run the check
fixSecurityAdvisorDirect()